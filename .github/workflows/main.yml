# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:

  # Triggers the workflow on push or pull request events
  push:
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: "Build"
        run: |
            sudo apt-get install libsqlite3-dev libreadline6-dev libgpg-error-dev libgnutls28-dev libxslt-dev libssl-dev libmysqlclient-dev unzip libtool automake libgcrypt20-dev
            cd $GITHUB_WORKSPACE
            cd ..
            wget https://github.com/Homegear/libhomegear-base/archive/master.zip
            unzip master.zip
            rm master.zip
            cd libhomegear-base-master
            ./makeRelease.sh
            cd $GITHUB_WORKSPACE
            ./makeRelease.sh

  armv7_job:
    # The host should always be Linux
    runs-on: ubuntu-latest
    name: Build on ubuntu-18.04 armv7
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: uraimo/run-on-arch-action@v2.1.1
        name: Run commands
        id: runcmd
        with:
          arch: armv7
          distro: ubuntu18.04

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          install: |
            apt-get install libsqlite3-dev libreadline6-dev libgpg-error-dev libgnutls28-dev libxslt-dev libssl-dev libmysqlclient-dev unzip libtool automake libgcrypt20-dev

          run: |
            cd $GITHUB_WORKSPACE
            cd ..
            wget https://github.com/Homegear/libhomegear-base/archive/master.zip
            unzip master.zip
            rm master.zip
            cd libhomegear-base-master
            ./makeRelease.sh
            cd $GITHUB_WORKSPACE
            ./makeRelease.sh
